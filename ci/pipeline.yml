---
resources:

- name: api-git
  type: git
  source:
    uri: ((api.uri))
    branch: ((api.branch))
    private_key: ((api.private_key))
    paths: ["api/**"]

- name: ci-git
  type: git
  source:
    uri: ((ci.uri))
    branch: ((ci.branch))
    private_key: ((ci.private_key))
    paths: ["ci/**"]


- name: version
  type: semver
  source: &version-source
    driver: git
    initial_version: 1.0.0
    file: version
    uri: ((version.uri))
    branch: ((version.branch))
    private_key: ((version.private_key))

- name: build-version
  type: semver
  source:
    <<: *version-source
    file: build-version

- name: rc-version
  type: semver
  source:
    <<: *version-source
    file: rc-version


- name: dev-version
  type: semver

  source: &deployments-source
    driver: git
    initial_version: 1.0.0
    uri: ((deployments.uri))
    branch: ((deployments.branch))
    private_key: ((deployments.private_key))

    file: dev-version

- name: acceptance-version
  type: semver

  source:
    <<: *deployments-source

    file: acceptance-version

- name: staging-version
  type: semver

  source:
    <<: *deployments-source

    file: staging-version

- name: prod-version
  type: semver

  source:
    <<: *deployments-source

    file: prod-version



- name: dev
  type: semver
  source:
    <<: *deployments-source
    file: dev

- name: acceptance
  type: semver
  source:
    <<: *deployments-source
    file: acceptance

- name: staging
  type: semver
  source:
    <<: *deployments-source
    file: staging

- name: prod
  type: semver
  source:
    <<: *deployments-source
    file: prod



- name: release-artifact
  type: semver
  source:
    <<: *version-source
    file: release.jar

- name: snapshot-artifact
  type: semver
  source:
    <<: *version-source
    file: snapshot.jar


jobs:

- name: deploy-to-dev
  serial: true

  plan:
  - in_parallel:
    - get: ci-git
    - &dev-req
      get: api-git
      passed: [build-and-publish]
    - <<: *dev-req
      get: build-version
      params: {}
    - <<: *dev-req
      get: snapshot-artifact
      trigger: true
  - in_parallel:
    - put: dev-version
      params:
        file: build-version/version
    - put: dev
      params:
        file: snapshot-artifact/version



- name: deploy-to-acceptance
  serial: true

  serial_groups:
  - modifies-version

  plan:
  - in_parallel:
    - get: ci-git
    - &acceptance-req
      get: api-git
      passed: [deploy-to-dev]
    - <<: *acceptance-req
      get: build-version
      params: {"bump": "patch"}
    - <<: *acceptance-req
      get: snapshot-artifact
      trigger: false
  - in_parallel:
    - put: acceptance-version
      params:
        file: build-version/version
    - put: acceptance
      params:
        file: snapshot-artifact/version


    - put: version
      params:
        file: build-version/version
    - put: rc-version
      params:
        bump: build-version/version


- name: deploy-to-staging
  serial: true

  plan:
  - in_parallel:
    - get: ci-git
    - &staging-req
      get: api-git
      passed: [nominate-for-release]
    - <<: *staging-req
      get: rc-version
      params: {}
    - <<: *staging-req
      get: release-artifact
      trigger: false
  - in_parallel:
    - put: staging-version
      params:
        file: rc-version/version
    - put: staging
      params:
        file: release-artifact/version



- name: deploy-to-prod
  serial: true

  plan:
  - in_parallel:
    - get: ci-git
    - &prod-req
      get: api-git
      passed: [prepare-for-prod]
    - <<: *prod-req
      get: rc-version
      params: {}
    - <<: *prod-req
      get: release-artifact
      trigger: false
  - in_parallel:
    - put: prod-version
      params:
        file: rc-version/version
    - put: prod
      params:
        file: release-artifact/version





- name: build-and-publish
  serial_groups:
  - modifies-version
  plan:
  - in_parallel:
    - get: ci-git
    - &build-req
      get: api-git
      passed: []
    - <<: *build-req
      get: version
      trigger: true
      params: {"pre": "build"}




  # This is where an implementation of building the project would be
  # For demonstration purposes, we will just copy the file over
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
      - name: version
      outputs:
      - name: build-output
      run:
        path: sh
        args:
          - '-xc'
          - cp version/version build-output/version




  - in_parallel:
    - put: snapshot-artifact
      params:

        file: build-output/version


    - put: build-version
      params:
        file: version/version


- name: nominate-for-release
  serial_groups:
  - modifies-version
  plan:
  - in_parallel:
    - get: ci-git
    - &rc-req
      get: api-git
      passed: [deploy-to-acceptance]
    - <<: *rc-req
      get: rc-version
      trigger: false
      params: {"pre": "rc"}

    - <<: *rc-req
      get: snapshot-artifact
      trigger: false



  - in_parallel:
    - put: release-artifact
      params:

        file: snapshot-artifact/version


    - put: rc-version
      params:
        file: rc-version/version


- name: prepare-for-prod
  serial_groups:
  - modifies-version
  plan:
  - in_parallel:
    - get: ci-git
    - &release-req
      get: api-git
      passed: [deploy-to-staging]
    - <<: *release-req
      get: rc-version
      trigger: false
      params: {"bump": "final"}

    - <<: *release-req
      get: release-artifact
      trigger: false



  - in_parallel:
    - put: release-artifact
      params:

        file: release-artifact/version


    - put: version
      params:
        file: rc-version/version





- name: bump-patch-version
  serial_groups:
  - modifies-version
  plan:
  - put: version
    params:
      bump: patch

- name: bump-minor-version
  serial_groups:
  - modifies-version
  plan:
  - put: version
    params:
      bump: minor

- name: bump-major-version
  serial_groups:
  - modifies-version
  plan:
  - put: version
    params:
      bump: major

